<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Only Mookrs</title>
    <link>http://mookrs.com/tags/python/</link>
    <description>Recent content in Python on Only Mookrs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 01 Aug 2016 01:05:04 +0000</lastBuildDate>
    
	<atom:link href="http://mookrs.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu 16.04 下配置 Flask &#43; Nginx &#43; Gunicorn &#43; Supervisor</title>
      <link>http://mookrs.com/flask-nginx-gunicorn-supervisor-on-ubuntu/</link>
      <pubDate>Mon, 01 Aug 2016 01:05:04 +0000</pubDate>
      
      <guid>http://mookrs.com/flask-nginx-gunicorn-supervisor-on-ubuntu/</guid>
      <description>仅供个人记录，附带了在另一台 Debian 8.0 x86_64 minimal 机器上的一些操作。
Initial Server Setup with Ubuntu 16.04
SSH 登录
ssh &amp;lt;user&amp;gt;@&amp;lt;ip&amp;gt; -p &amp;lt;port&amp;gt;  修改 root 密码
passwd root  添加新账户
useradd &amp;lt;user&amp;gt; passwd &amp;lt;user&amp;gt; usermod -aG sudo &amp;lt;user&amp;gt;  新建用户目录，替换 sh 为 bash
useradd --create-home --user-group --shell /bin/bash &amp;lt;user&amp;gt;  修改 SSH 端口，禁用 root 登录，禁用密码登录
sudo vi /etc/ssh/sshd_config  找到并修改 Port &amp;lt;数字&amp;gt;、PermitRootLogin no、PasswordAuthentication no
SSH-Key 登录，本地
ssh-keygen cat ~/.ssh/id_rsa.pub  服务器
mkdir ~/.ssh chmod 700 ~/.</description>
    </item>
    
    <item>
      <title>Python 3 下使用 Flask-SQLAlchemy &#43; MySQL</title>
      <link>http://mookrs.com/flask-sqlalchemy-mysql-python-3/</link>
      <pubDate>Wed, 27 Jul 2016 18:52:26 +0800</pubDate>
      
      <guid>http://mookrs.com/flask-sqlalchemy-mysql-python-3/</guid>
      <description>按照 Flask-SQLAlchemy 文档的说明，配置好 SQLALCHEMY_DATABASE_URI = &#39;mysql://username:password@server/db&#39; 后操作 MySQL 报错 ImportError: No module named &#39;MySQLdb&#39;。既然缺少 MySQLdb 这个模块，按照正常的想法执行 pip install MySQL-python 应该能解决，但是却报错 ImportError: No module named &#39;ConfigParser&#39;。查了一下，这是由于 MySQL-python 不支持 Python 3（MySQL-3.23 through 5.5 and Python-2.4 through 2.7 are currently supported）。
于是 找到了一个替代—— PyMySQL（还有一个 可能的选择 是 oursql）。执行 pip install PyMySQL，将数据库连接改为 mysql+pymysql://username:password@server/db，接下来的操作就一切正常了。
其他备忘：
 执行 Flask-Migrate 的 python manage.py db migrate 时报错 sqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1049, &amp;quot;Unknown database &#39;testdb&#39;&amp;quot;)，是因为要先建好数据库才能访问，SQLAlchemy 不会自己创建数据库。 数据库连接和依赖配置好后，依次执行：
$ python manage.py db init $ python manage.</description>
    </item>
    
    <item>
      <title>导入 ArcPy 及打包地图</title>
      <link>http://mookrs.com/importing-arcpy-and-package-map/</link>
      <pubDate>Tue, 11 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://mookrs.com/importing-arcpy-and-package-map/</guid>
      <description>导入 ArcPy 安装 ArcGIS 的时候一般会附带安装 Python，但是其版本比较旧，例如 ArcGIS 10.1 自带的还是 Python 2.6，而我通常选择使用较新的 Python 2.x 版本，这就造成了在执行跟 ArcPy 相关的命令时，将提示 No module named arcpy 的问题。对此，ArcGIS 官方文档提供了一个导入 ArcPy 的方法。
打开资源管理器浏览至 python27\Lib\site-packages 文件夹，以 ArcGIS 10.2.2 版本为例，添加或编辑 Desktop10.2.2.pth 文件（或 Engine10.2.2.pth、Server10.2.2.pth），内容如下：
c:\Program Files\ArcGIS\Desktop10.2.2\arcpy c:\Program Files\ArcGIS\Desktop10.2.2\bin c:\Program Files\ArcGIS\Desktop10.2.2\ArcToolbox\Scripts  根据自己的实际路径修改完成后，如果提示 No module named numpy，那么还要去下载安装 NumPy，之后就可以正常使用 ArcPy 了。
打包地图 之前有同事通过 ArcGIS 的 GP 工具打包生成的 MPK 文件不能用于 ArcGIS Runtime，检查后发现 MPK 中均没有 .msd 文件。另一个问题是 MPK 中含有 v101 和 v10 两个文件夹，而我们的系统只需要 v101 即可。造成这些问题的原因都在于打包过程中没有指定正确的参数。类似地，利用 ArcPy 打包地图时，需要指定 arcgisruntime 和 version 两个参数，官方文档 对各个参数做了详尽的解释。一个可能的示例代码如下：</description>
    </item>
    
  </channel>
</rss>